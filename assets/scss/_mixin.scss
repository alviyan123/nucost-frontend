// for css3 transition
@mixin transition($args...) {
  -webkit-transition: $args;
     -moz-transition: $args;
      -ms-transition: $args;
       -o-transition: $args;
          transition: $args;
}
// example use
//.class-name { @include transition(all 0.5s ease); }

// for css3 transition delay
@mixin transition-delay($args...) {
  -webkit-transition-delay: $args;
     -moz-transition-delay: $args;
      -ms-transition-delay: $args;
       -o-transition-delay: $args;
          transition-delay: $args;
}
// example use
//.class-name { @include transition(all 0.5s ease); }



// for css3 transform
@mixin transform($transform...) {
  -webkit-transform: $transform;
     -moz-transform: $transform;
      -ms-transform: $transform;
       -o-transform: $transform;
          transform: $transform;
}
// example use
//.class-name { @include transition(all 0.5s ease); }



// for css3 translate
@mixin translate($translate...) {
  -webkit-translate: $translate;
     -moz-translate: $translate;
      -ms-translate: $translate;
       -o-translate: $translate;
          translate: $translate;
}

// for css3 transform style
@mixin transform-style($transform-style...) {
  -webkit-transform: $transform-style;
     -moz-transform: $transform-style;
      -ms-transform: $transform-style;
       -o-transform: $transform-style;
          transform: $transform-style;
}
// example use
//.class-name { @include transform-style(preserve-3d); }

// for css3 box-shadow
@mixin box-shadow($box-shadow...) {
  -webkit-box-shadow: $box-shadow;
     -moz-box-shadow: $box-shadow;
      -ms-box-shadow: $box-shadow;
       -o-box-shadow: $box-shadow;
          box-shadow: $box-shadow;
}


// for css3 animation
@mixin keyframes($animation-name) {
  @-webkit-keyframes #{$animation-name} { @content; }
     @-moz-keyframes #{$animation-name} { @content; }
      @-ms-keyframes #{$animation-name} { @content; }
       @-o-keyframes #{$animation-name} { @content; }
          @keyframes #{$animation-name} { @content; }
}

@mixin animation($str) {
  -webkit-animation: #{$str};
     -moz-animation: #{$str};
      -ms-animation: #{$str};
       -o-animation: #{$str};
          animation: #{$str};
}
// for example use
// @include keyframes(animationName) {
//   0% { opacity: 1; }
//   90% { opacity: 0; }
// }
// .class-name {
//   @include animation('animationName 5s 3');
// }



@mixin animation-delay($animdelay) {
  -webkit-animation-delay: #{$animdelay};
     -moz-animation-delay: #{$animdelay};
      -ms-animation-delay: #{$animdelay};
       -o-animation-delay: #{$animdelay};
          animation-delay: #{$animdelay};
}

@mixin animation-duration($animDuration) {
  -webkit-animation-duration: #{$animDuration};
     -moz-animation-duration: #{$animDuration};
      -ms-animation-duration: #{$animDuration};
       -o-animation-duration: #{$animDuration};
          animation-duration: #{$animDuration};
}


@mixin animation-fill-mode($fillmode) {
  -webkit-animation-fill-mode: #{$fillmode};
     -moz-animation-fill-mode: #{$fillmode};
      -ms-animation-fill-mode: #{$fillmode};
       -o-animation-fill-mode: #{$fillmode};
          animation-fill-mode: #{$fillmode};
}
// @include animation-fill-mode(forwards);


// for border radius
@mixin border-radius($radius) {
  -webkit-border-radius: $radius;
     -moz-border-radius: $radius;
      -ms-border-radius: $radius;
          border-radius: $radius;
}
// example use
//.class-name { @include border-radius(10px); }



// for input appearance
@mixin appearance($appearance) {
  -webkit-appearance: $appearance;
     -moz-appearance: $appearance;
          appearance: $appearance;
}
// example use
//.class-name { @include appearance(none); }



// for user select
@mixin user-select($userselect) {
  -webkit-user-select: $userselect;
     -moz-user-select: $userselect;
      -ms-user-select: $userselect;
          user-select: $userselect;
}
// example use
//.class-name { @include user-select(none); }



// for pointer events
@mixin pointer-events($pointerevents) {
  -webkit-pointer-events: $pointerevents;
     -moz-pointer-events: $pointerevents;
      -ms-pointer-events: $pointerevents;
          pointer-events: $pointerevents;
}
// example use
//.class-name { @include pointer-events(none); }



// for box sizing
@mixin box-sizing($boxsizing) {
  -webkit-box-sizing: $boxsizing;
     -moz-box-sizing: $boxsizing;
      -ms-box-sizing: $boxsizing;
          box-sizing: $boxsizing;
}

@mixin device($media) {
  @if $media == mobile {
    @media only screen and (max-width: 550px) { @content; }
  }
  @if $media == mobile-xs {
    @media only screen and (max-width: 360px) { @content; }
  }
  @if $media == phablet {
    @media only screen and (max-width: 800px) { @content; }
  }
  @else if $media == tablet {
    @media only screen and (min-width: 550px + 1) and (max-width: 1024px - 1) { @content; }
  }
  @else if $media == tablet-l {
    @media only screen and (min-width: 1024px - 1) and (max-width: 1280px - 1) { @content; }
  }
  @else if $media == tablet-down {
    @media only screen and (max-width: 1280px - 1) { @content; }
  }
  @else if $media == desktop {
    @media only screen and (min-width: 1280px - 1) { @content; }
  }
  @else if $media == hdd {
    @media only screen and (min-width: 1440px - 1) { @content; }
  }
}
// example use
//.class-name { @include pointer-events(none); }

// @mixin device($media) {
//   @if $media == mobile {
//       @media only screen and (max-width: 768px - 1) { @content; }
//   }
//   @else if $media == tablet {
//       @media only screen and (min-width: 768px) and (max-width: 992px - 1) { @content; }
//   }
//   @else if $media == desktop {
//       @media only screen and (min-width: 992px) and (max-width: 1200px - 1) { @content; }
//   }
//   @else if $media == desktop-up {
//       @media only screen and (min-width: 1200px) { @content; }
//   }
//   @else if $media == hd {
//       @media only screen and (min-width: 1280px + 1) { @content; }
//   }
//   @else if $media == hdd {
//       @media only screen and (min-width: 1300px + 1) { @content; }
//   }
//   @else if $media == hdd-up {
//       @media only screen and (min-width: 1400px) { @content; }
//   }
//   @else if $media == hdd-up {
//       @media only screen and (min-width: 1400px) { @content; }
//   }

//   @else if $media == ultra-hd {
//       @media only screen and (min-width: 1600px) { @content; }
//   }
// }

%font-helvetica{
  font-family: 'Montserrat', sans-serif;
}

%font-gotham-medium{
  font-family: 'Gotham Medium', sans-serif;
  -webkit-font-smoothing: antialiased;
  text-rendering: optimizeLegibility;
}

%font-14{
  font-size: 14px;
  line-height: 20px;
}

%font-16{
  font-size: 16px;
  line-height: 24px;
}

%font-18{
  font-size: 18px;
  line-height: 27px;
}

%font-20{
  font-size: 20px;
  line-height: 30px;
}

%font-24{
  font-size: 24px;
  line-height: 30px;
}

%font-36{
  font-size: 36px;
  line-height: 44px;
}
